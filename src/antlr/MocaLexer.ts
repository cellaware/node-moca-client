// Generated from C://dev//node-moca-client//src//lang//antlr//Moca.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class MocaLexer extends Lexer {
	public static readonly DOUBLE_BRACKET_STRING = 1;
	public static readonly SINGLE_BRACKET_STRING = 2;
	public static readonly LEFT_PAREN = 3;
	public static readonly RIGHT_PAREN = 4;
	public static readonly LEFT_BRACE = 5;
	public static readonly RIGHT_BRACE = 6;
	public static readonly LEFT_BRACKET = 7;
	public static readonly RIGHT_BRACKET = 8;
	public static readonly LESS = 9;
	public static readonly GREATER = 10;
	public static readonly LESS_EQUAL = 11;
	public static readonly GREATER_EQUAL = 12;
	public static readonly DOUBLE_LESS = 13;
	public static readonly DOUBLE_GREATER = 14;
	public static readonly PLUS = 15;
	public static readonly MINUS = 16;
	public static readonly STAR = 17;
	public static readonly DIV = 18;
	public static readonly MOD = 19;
	public static readonly BACKSLASH = 20;
	public static readonly AMPERSAND = 21;
	public static readonly CARET = 22;
	public static readonly BANG = 23;
	public static readonly QUESTION = 24;
	public static readonly COLON = 25;
	public static readonly SEMI_COLON = 26;
	public static readonly COMMA = 27;
	public static readonly PIPE = 28;
	public static readonly DOUBLE_PIPE = 29;
	public static readonly POUND = 30;
	public static readonly AT = 31;
	public static readonly EQUAL = 32;
	public static readonly NOT_EQUAL = 33;
	public static readonly DOT = 34;
	public static readonly DOLLAR_SIGN = 35;
	public static readonly OVERSTACKED_ARGS = 36;
	public static readonly SPECIAL_COMMAND_ARG_NO_ROWS = 37;
	public static readonly SPECIAL_COMMAND_ARG_DUMMY_ARG = 38;
	public static readonly SUPPRESS_WARNINGS = 39;
	public static readonly WHERE = 40;
	public static readonly AND = 41;
	public static readonly LIKE = 42;
	public static readonly OR = 43;
	public static readonly IS = 44;
	public static readonly NOT = 45;
	public static readonly NULL = 46;
	public static readonly IF = 47;
	public static readonly ELSE = 48;
	public static readonly TRY = 49;
	public static readonly CATCH = 50;
	public static readonly FINALLY = 51;
	public static readonly REMOTE = 52;
	public static readonly PARALLEL = 53;
	public static readonly INPARALLEL = 54;
	public static readonly ONSTACK = 55;
	public static readonly KEEP = 56;
	public static readonly NUMERIC_LITERAL = 57;
	public static readonly STRING_LITERAL = 58;
	public static readonly WORD = 59;
	public static readonly BLOCK_COMMENT = 60;
	public static readonly WHITESPACE = 61;
	public static readonly NEWLINE = 62;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, "'('", 
                                                            "')'", "'{'", 
                                                            "'}'", "'['", 
                                                            "']'", "'<'", 
                                                            "'>'", "'<='", 
                                                            "'>='", "'<<'", 
                                                            "'>>'", "'+'", 
                                                            "'-'", "'*'", 
                                                            "'/'", "'%'", 
                                                            "'\\'", "'&'", 
                                                            "'^'", "'!'", 
                                                            "'?'", "':'", 
                                                            "';'", "','", 
                                                            "'|'", "'||'", 
                                                            "'#'", "'@'", 
                                                            "'='", null, 
                                                            "'.'", "'$'", 
                                                            "'<<OVERSTACKED_ARGS>>'", 
                                                            "'#NO_ROWS'", 
                                                            "'#DUMMY_ARG'", 
                                                            "'@SuppressWarnings'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "DOUBLE_BRACKET_STRING", 
                                                             "SINGLE_BRACKET_STRING", 
                                                             "LEFT_PAREN", 
                                                             "RIGHT_PAREN", 
                                                             "LEFT_BRACE", 
                                                             "RIGHT_BRACE", 
                                                             "LEFT_BRACKET", 
                                                             "RIGHT_BRACKET", 
                                                             "LESS", "GREATER", 
                                                             "LESS_EQUAL", 
                                                             "GREATER_EQUAL", 
                                                             "DOUBLE_LESS", 
                                                             "DOUBLE_GREATER", 
                                                             "PLUS", "MINUS", 
                                                             "STAR", "DIV", 
                                                             "MOD", "BACKSLASH", 
                                                             "AMPERSAND", 
                                                             "CARET", "BANG", 
                                                             "QUESTION", 
                                                             "COLON", "SEMI_COLON", 
                                                             "COMMA", "PIPE", 
                                                             "DOUBLE_PIPE", 
                                                             "POUND", "AT", 
                                                             "EQUAL", "NOT_EQUAL", 
                                                             "DOT", "DOLLAR_SIGN", 
                                                             "OVERSTACKED_ARGS", 
                                                             "SPECIAL_COMMAND_ARG_NO_ROWS", 
                                                             "SPECIAL_COMMAND_ARG_DUMMY_ARG", 
                                                             "SUPPRESS_WARNINGS", 
                                                             "WHERE", "AND", 
                                                             "LIKE", "OR", 
                                                             "IS", "NOT", 
                                                             "NULL", "IF", 
                                                             "ELSE", "TRY", 
                                                             "CATCH", "FINALLY", 
                                                             "REMOTE", "PARALLEL", 
                                                             "INPARALLEL", 
                                                             "ONSTACK", 
                                                             "KEEP", "NUMERIC_LITERAL", 
                                                             "STRING_LITERAL", 
                                                             "WORD", "BLOCK_COMMENT", 
                                                             "WHITESPACE", 
                                                             "NEWLINE" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"DOUBLE_BRACKET_STRING", "SINGLE_BRACKET_STRING", "FRAGMENT_SINGLE_BRACKET_STRING", 
		"LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_BRACKET", 
		"RIGHT_BRACKET", "LESS", "GREATER", "LESS_EQUAL", "GREATER_EQUAL", "DOUBLE_LESS", 
		"DOUBLE_GREATER", "PLUS", "MINUS", "STAR", "DIV", "MOD", "BACKSLASH", 
		"AMPERSAND", "CARET", "BANG", "QUESTION", "COLON", "SEMI_COLON", "COMMA", 
		"PIPE", "DOUBLE_PIPE", "POUND", "AT", "EQUAL", "NOT_EQUAL", "DOT", "DOLLAR_SIGN", 
		"OVERSTACKED_ARGS", "SPECIAL_COMMAND_ARG_NO_ROWS", "SPECIAL_COMMAND_ARG_DUMMY_ARG", 
		"SUPPRESS_WARNINGS", "WHERE", "AND", "LIKE", "OR", "IS", "NOT", "NULL", 
		"IF", "ELSE", "TRY", "CATCH", "FINALLY", "REMOTE", "PARALLEL", "INPARALLEL", 
		"ONSTACK", "KEEP", "NUMERIC_LITERAL", "STRING_LITERAL", "WORD", "BLOCK_COMMENT", 
		"WHITESPACE", "NEWLINE", "DIGIT", "A", "B", "C", "D", "E", "F", "G", "H", 
		"I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
		"W", "X", "Y", "Z",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, MocaLexer._ATN, MocaLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Moca.g4"; }

	public get literalNames(): (string | null)[] { return MocaLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return MocaLexer.symbolicNames; }
	public get ruleNames(): string[] { return MocaLexer.ruleNames; }

	public get serializedATN(): number[] { return MocaLexer._serializedATN; }

	public get channelNames(): string[] { return MocaLexer.channelNames; }

	public get modeNames(): string[] { return MocaLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,62,582,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,
	89,7,89,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,5,2,191,8,2,10,2,12,2,194,9,
	2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,
	1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,
	15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,
	1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,
	29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,3,33,267,8,33,1,34,
	1,34,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
	36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,
	1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
	38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
	1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,
	42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,45,
	1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,
	49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,
	1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,
	53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
	1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,57,4,
	57,429,8,57,11,57,12,57,430,1,57,1,57,5,57,435,8,57,10,57,12,57,438,9,57,
	3,57,440,8,57,1,57,1,57,3,57,444,8,57,1,57,4,57,447,8,57,11,57,12,57,448,
	3,57,451,8,57,1,57,1,57,4,57,455,8,57,11,57,12,57,456,1,57,1,57,3,57,461,
	8,57,1,57,4,57,464,8,57,11,57,12,57,465,3,57,468,8,57,3,57,470,8,57,1,58,
	1,58,1,58,1,58,5,58,476,8,58,10,58,12,58,479,9,58,1,58,1,58,1,58,1,58,1,
	58,5,58,486,8,58,10,58,12,58,489,9,58,1,58,3,58,492,8,58,1,59,4,59,495,
	8,59,11,59,12,59,496,1,60,1,60,1,60,1,60,5,60,503,8,60,10,60,12,60,506,
	9,60,1,60,1,60,1,60,1,60,1,60,1,61,4,61,514,8,61,11,61,12,61,515,1,61,1,
	61,1,62,1,62,3,62,522,8,62,1,62,3,62,525,8,62,1,62,1,62,1,63,1,63,1,64,
	1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,
	71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,
	1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,
	86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,504,0,90,1,1,3,2,5,0,7,3,9,4,11,
	5,13,6,15,7,17,8,19,9,21,10,23,11,25,12,27,13,29,14,31,15,33,16,35,17,37,
	18,39,19,41,20,43,21,45,22,47,23,49,24,51,25,53,26,55,27,57,28,59,29,61,
	30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,79,39,81,40,83,41,85,
	42,87,43,89,44,91,45,93,46,95,47,97,48,99,49,101,50,103,51,105,52,107,53,
	109,54,111,55,113,56,115,57,117,58,119,59,121,60,123,61,125,62,127,0,129,
	0,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,0,149,0,151,0,153,
	0,155,0,157,0,159,0,161,0,163,0,165,0,167,0,169,0,171,0,173,0,175,0,177,
	0,179,0,1,0,33,2,0,91,91,93,93,2,0,43,43,45,45,1,0,39,39,1,0,34,34,5,0,
	46,46,48,57,65,90,95,95,97,122,2,0,9,9,32,32,1,0,48,57,2,0,65,65,97,97,
	2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,
	70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,
	74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,
	78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,
	82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,
	86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,
	90,90,122,122,577,0,1,1,0,0,0,0,3,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
	1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
	0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
	1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
	0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
	1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
	0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
	1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
	0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
	1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,
	0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,
	0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,1,181,1,0,0,0,3,185,1,0,0,
	0,5,187,1,0,0,0,7,197,1,0,0,0,9,199,1,0,0,0,11,201,1,0,0,0,13,203,1,0,0,
	0,15,205,1,0,0,0,17,207,1,0,0,0,19,209,1,0,0,0,21,211,1,0,0,0,23,213,1,
	0,0,0,25,216,1,0,0,0,27,219,1,0,0,0,29,222,1,0,0,0,31,225,1,0,0,0,33,227,
	1,0,0,0,35,229,1,0,0,0,37,231,1,0,0,0,39,233,1,0,0,0,41,235,1,0,0,0,43,
	237,1,0,0,0,45,239,1,0,0,0,47,241,1,0,0,0,49,243,1,0,0,0,51,245,1,0,0,0,
	53,247,1,0,0,0,55,249,1,0,0,0,57,251,1,0,0,0,59,253,1,0,0,0,61,256,1,0,
	0,0,63,258,1,0,0,0,65,260,1,0,0,0,67,266,1,0,0,0,69,268,1,0,0,0,71,270,
	1,0,0,0,73,272,1,0,0,0,75,293,1,0,0,0,77,302,1,0,0,0,79,313,1,0,0,0,81,
	331,1,0,0,0,83,337,1,0,0,0,85,341,1,0,0,0,87,346,1,0,0,0,89,349,1,0,0,0,
	91,352,1,0,0,0,93,356,1,0,0,0,95,361,1,0,0,0,97,364,1,0,0,0,99,369,1,0,
	0,0,101,373,1,0,0,0,103,379,1,0,0,0,105,387,1,0,0,0,107,394,1,0,0,0,109,
	403,1,0,0,0,111,414,1,0,0,0,113,422,1,0,0,0,115,469,1,0,0,0,117,491,1,0,
	0,0,119,494,1,0,0,0,121,498,1,0,0,0,123,513,1,0,0,0,125,524,1,0,0,0,127,
	528,1,0,0,0,129,530,1,0,0,0,131,532,1,0,0,0,133,534,1,0,0,0,135,536,1,0,
	0,0,137,538,1,0,0,0,139,540,1,0,0,0,141,542,1,0,0,0,143,544,1,0,0,0,145,
	546,1,0,0,0,147,548,1,0,0,0,149,550,1,0,0,0,151,552,1,0,0,0,153,554,1,0,
	0,0,155,556,1,0,0,0,157,558,1,0,0,0,159,560,1,0,0,0,161,562,1,0,0,0,163,
	564,1,0,0,0,165,566,1,0,0,0,167,568,1,0,0,0,169,570,1,0,0,0,171,572,1,0,
	0,0,173,574,1,0,0,0,175,576,1,0,0,0,177,578,1,0,0,0,179,580,1,0,0,0,181,
	182,3,15,7,0,182,183,3,5,2,0,183,184,3,17,8,0,184,2,1,0,0,0,185,186,3,5,
	2,0,186,4,1,0,0,0,187,192,3,15,7,0,188,191,8,0,0,0,189,191,3,5,2,0,190,
	188,1,0,0,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,1,0,0,0,192,193,1,0,
	0,0,193,195,1,0,0,0,194,192,1,0,0,0,195,196,3,17,8,0,196,6,1,0,0,0,197,
	198,5,40,0,0,198,8,1,0,0,0,199,200,5,41,0,0,200,10,1,0,0,0,201,202,5,123,
	0,0,202,12,1,0,0,0,203,204,5,125,0,0,204,14,1,0,0,0,205,206,5,91,0,0,206,
	16,1,0,0,0,207,208,5,93,0,0,208,18,1,0,0,0,209,210,5,60,0,0,210,20,1,0,
	0,0,211,212,5,62,0,0,212,22,1,0,0,0,213,214,5,60,0,0,214,215,5,61,0,0,215,
	24,1,0,0,0,216,217,5,62,0,0,217,218,5,61,0,0,218,26,1,0,0,0,219,220,5,60,
	0,0,220,221,5,60,0,0,221,28,1,0,0,0,222,223,5,62,0,0,223,224,5,62,0,0,224,
	30,1,0,0,0,225,226,5,43,0,0,226,32,1,0,0,0,227,228,5,45,0,0,228,34,1,0,
	0,0,229,230,5,42,0,0,230,36,1,0,0,0,231,232,5,47,0,0,232,38,1,0,0,0,233,
	234,5,37,0,0,234,40,1,0,0,0,235,236,5,92,0,0,236,42,1,0,0,0,237,238,5,38,
	0,0,238,44,1,0,0,0,239,240,5,94,0,0,240,46,1,0,0,0,241,242,5,33,0,0,242,
	48,1,0,0,0,243,244,5,63,0,0,244,50,1,0,0,0,245,246,5,58,0,0,246,52,1,0,
	0,0,247,248,5,59,0,0,248,54,1,0,0,0,249,250,5,44,0,0,250,56,1,0,0,0,251,
	252,5,124,0,0,252,58,1,0,0,0,253,254,5,124,0,0,254,255,5,124,0,0,255,60,
	1,0,0,0,256,257,5,35,0,0,257,62,1,0,0,0,258,259,5,64,0,0,259,64,1,0,0,0,
	260,261,5,61,0,0,261,66,1,0,0,0,262,263,5,33,0,0,263,267,5,61,0,0,264,265,
	5,60,0,0,265,267,5,62,0,0,266,262,1,0,0,0,266,264,1,0,0,0,267,68,1,0,0,
	0,268,269,5,46,0,0,269,70,1,0,0,0,270,271,5,36,0,0,271,72,1,0,0,0,272,273,
	5,60,0,0,273,274,5,60,0,0,274,275,5,79,0,0,275,276,5,86,0,0,276,277,5,69,
	0,0,277,278,5,82,0,0,278,279,5,83,0,0,279,280,5,84,0,0,280,281,5,65,0,0,
	281,282,5,67,0,0,282,283,5,75,0,0,283,284,5,69,0,0,284,285,5,68,0,0,285,
	286,5,95,0,0,286,287,5,65,0,0,287,288,5,82,0,0,288,289,5,71,0,0,289,290,
	5,83,0,0,290,291,5,62,0,0,291,292,5,62,0,0,292,74,1,0,0,0,293,294,5,35,
	0,0,294,295,5,78,0,0,295,296,5,79,0,0,296,297,5,95,0,0,297,298,5,82,0,0,
	298,299,5,79,0,0,299,300,5,87,0,0,300,301,5,83,0,0,301,76,1,0,0,0,302,303,
	5,35,0,0,303,304,5,68,0,0,304,305,5,85,0,0,305,306,5,77,0,0,306,307,5,77,
	0,0,307,308,5,89,0,0,308,309,5,95,0,0,309,310,5,65,0,0,310,311,5,82,0,0,
	311,312,5,71,0,0,312,78,1,0,0,0,313,314,5,64,0,0,314,315,5,83,0,0,315,316,
	5,117,0,0,316,317,5,112,0,0,317,318,5,112,0,0,318,319,5,114,0,0,319,320,
	5,101,0,0,320,321,5,115,0,0,321,322,5,115,0,0,322,323,5,87,0,0,323,324,
	5,97,0,0,324,325,5,114,0,0,325,326,5,110,0,0,326,327,5,105,0,0,327,328,
	5,110,0,0,328,329,5,103,0,0,329,330,5,115,0,0,330,80,1,0,0,0,331,332,3,
	173,86,0,332,333,3,143,71,0,333,334,3,137,68,0,334,335,3,163,81,0,335,336,
	3,137,68,0,336,82,1,0,0,0,337,338,3,129,64,0,338,339,3,155,77,0,339,340,
	3,135,67,0,340,84,1,0,0,0,341,342,3,151,75,0,342,343,3,145,72,0,343,344,
	3,149,74,0,344,345,3,137,68,0,345,86,1,0,0,0,346,347,3,157,78,0,347,348,
	3,163,81,0,348,88,1,0,0,0,349,350,3,145,72,0,350,351,3,165,82,0,351,90,
	1,0,0,0,352,353,3,155,77,0,353,354,3,157,78,0,354,355,3,167,83,0,355,92,
	1,0,0,0,356,357,3,155,77,0,357,358,3,169,84,0,358,359,3,151,75,0,359,360,
	3,151,75,0,360,94,1,0,0,0,361,362,3,145,72,0,362,363,3,139,69,0,363,96,
	1,0,0,0,364,365,3,137,68,0,365,366,3,151,75,0,366,367,3,165,82,0,367,368,
	3,137,68,0,368,98,1,0,0,0,369,370,3,167,83,0,370,371,3,163,81,0,371,372,
	3,177,88,0,372,100,1,0,0,0,373,374,3,133,66,0,374,375,3,129,64,0,375,376,
	3,167,83,0,376,377,3,133,66,0,377,378,3,143,71,0,378,102,1,0,0,0,379,380,
	3,139,69,0,380,381,3,145,72,0,381,382,3,155,77,0,382,383,3,129,64,0,383,
	384,3,151,75,0,384,385,3,151,75,0,385,386,3,177,88,0,386,104,1,0,0,0,387,
	388,3,163,81,0,388,389,3,137,68,0,389,390,3,153,76,0,390,391,3,157,78,0,
	391,392,3,167,83,0,392,393,3,137,68,0,393,106,1,0,0,0,394,395,3,159,79,
	0,395,396,3,129,64,0,396,397,3,163,81,0,397,398,3,129,64,0,398,399,3,151,
	75,0,399,400,3,151,75,0,400,401,3,137,68,0,401,402,3,151,75,0,402,108,1,
	0,0,0,403,404,3,145,72,0,404,405,3,155,77,0,405,406,3,159,79,0,406,407,
	3,129,64,0,407,408,3,163,81,0,408,409,3,129,64,0,409,410,3,151,75,0,410,
	411,3,151,75,0,411,412,3,137,68,0,412,413,3,151,75,0,413,110,1,0,0,0,414,
	415,3,157,78,0,415,416,3,155,77,0,416,417,3,165,82,0,417,418,3,167,83,0,
	418,419,3,129,64,0,419,420,3,133,66,0,420,421,3,149,74,0,421,112,1,0,0,
	0,422,423,3,149,74,0,423,424,3,137,68,0,424,425,3,137,68,0,425,426,3,159,
	79,0,426,114,1,0,0,0,427,429,3,127,63,0,428,427,1,0,0,0,429,430,1,0,0,0,
	430,428,1,0,0,0,430,431,1,0,0,0,431,439,1,0,0,0,432,436,5,46,0,0,433,435,
	3,127,63,0,434,433,1,0,0,0,435,438,1,0,0,0,436,434,1,0,0,0,436,437,1,0,
	0,0,437,440,1,0,0,0,438,436,1,0,0,0,439,432,1,0,0,0,439,440,1,0,0,0,440,
	450,1,0,0,0,441,443,3,137,68,0,442,444,7,1,0,0,443,442,1,0,0,0,443,444,
	1,0,0,0,444,446,1,0,0,0,445,447,3,127,63,0,446,445,1,0,0,0,447,448,1,0,
	0,0,448,446,1,0,0,0,448,449,1,0,0,0,449,451,1,0,0,0,450,441,1,0,0,0,450,
	451,1,0,0,0,451,470,1,0,0,0,452,454,5,46,0,0,453,455,3,127,63,0,454,453,
	1,0,0,0,455,456,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,467,1,0,0,0,
	458,460,3,137,68,0,459,461,7,1,0,0,460,459,1,0,0,0,460,461,1,0,0,0,461,
	463,1,0,0,0,462,464,3,127,63,0,463,462,1,0,0,0,464,465,1,0,0,0,465,463,
	1,0,0,0,465,466,1,0,0,0,466,468,1,0,0,0,467,458,1,0,0,0,467,468,1,0,0,0,
	468,470,1,0,0,0,469,428,1,0,0,0,469,452,1,0,0,0,470,116,1,0,0,0,471,477,
	5,39,0,0,472,476,8,2,0,0,473,474,5,39,0,0,474,476,5,39,0,0,475,472,1,0,
	0,0,475,473,1,0,0,0,476,479,1,0,0,0,477,475,1,0,0,0,477,478,1,0,0,0,478,
	480,1,0,0,0,479,477,1,0,0,0,480,492,5,39,0,0,481,487,5,34,0,0,482,486,8,
	3,0,0,483,484,5,34,0,0,484,486,5,34,0,0,485,482,1,0,0,0,485,483,1,0,0,0,
	486,489,1,0,0,0,487,485,1,0,0,0,487,488,1,0,0,0,488,490,1,0,0,0,489,487,
	1,0,0,0,490,492,5,34,0,0,491,471,1,0,0,0,491,481,1,0,0,0,492,118,1,0,0,
	0,493,495,7,4,0,0,494,493,1,0,0,0,495,496,1,0,0,0,496,494,1,0,0,0,496,497,
	1,0,0,0,497,120,1,0,0,0,498,499,5,47,0,0,499,500,5,42,0,0,500,504,1,0,0,
	0,501,503,9,0,0,0,502,501,1,0,0,0,503,506,1,0,0,0,504,505,1,0,0,0,504,502,
	1,0,0,0,505,507,1,0,0,0,506,504,1,0,0,0,507,508,5,42,0,0,508,509,5,47,0,
	0,509,510,1,0,0,0,510,511,6,60,0,0,511,122,1,0,0,0,512,514,7,5,0,0,513,
	512,1,0,0,0,514,515,1,0,0,0,515,513,1,0,0,0,515,516,1,0,0,0,516,517,1,0,
	0,0,517,518,6,61,0,0,518,124,1,0,0,0,519,521,5,13,0,0,520,522,5,10,0,0,
	521,520,1,0,0,0,521,522,1,0,0,0,522,525,1,0,0,0,523,525,5,10,0,0,524,519,
	1,0,0,0,524,523,1,0,0,0,525,526,1,0,0,0,526,527,6,62,0,0,527,126,1,0,0,
	0,528,529,7,6,0,0,529,128,1,0,0,0,530,531,7,7,0,0,531,130,1,0,0,0,532,533,
	7,8,0,0,533,132,1,0,0,0,534,535,7,9,0,0,535,134,1,0,0,0,536,537,7,10,0,
	0,537,136,1,0,0,0,538,539,7,11,0,0,539,138,1,0,0,0,540,541,7,12,0,0,541,
	140,1,0,0,0,542,543,7,13,0,0,543,142,1,0,0,0,544,545,7,14,0,0,545,144,1,
	0,0,0,546,547,7,15,0,0,547,146,1,0,0,0,548,549,7,16,0,0,549,148,1,0,0,0,
	550,551,7,17,0,0,551,150,1,0,0,0,552,553,7,18,0,0,553,152,1,0,0,0,554,555,
	7,19,0,0,555,154,1,0,0,0,556,557,7,20,0,0,557,156,1,0,0,0,558,559,7,21,
	0,0,559,158,1,0,0,0,560,561,7,22,0,0,561,160,1,0,0,0,562,563,7,23,0,0,563,
	162,1,0,0,0,564,565,7,24,0,0,565,164,1,0,0,0,566,567,7,25,0,0,567,166,1,
	0,0,0,568,569,7,26,0,0,569,168,1,0,0,0,570,571,7,27,0,0,571,170,1,0,0,0,
	572,573,7,28,0,0,573,172,1,0,0,0,574,575,7,29,0,0,575,174,1,0,0,0,576,577,
	7,30,0,0,577,176,1,0,0,0,578,579,7,31,0,0,579,178,1,0,0,0,580,581,7,32,
	0,0,581,180,1,0,0,0,25,0,190,192,266,430,436,439,443,448,450,456,460,465,
	467,469,475,477,485,487,491,496,504,515,521,524,1,0,1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MocaLexer.__ATN) {
			MocaLexer.__ATN = new ATNDeserializer().deserialize(MocaLexer._serializedATN);
		}

		return MocaLexer.__ATN;
	}


	static DecisionsToDFA = MocaLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}